{"version":3,"sources":["components/DragonParkDetail.js"],"names":["DragonParkDetail","checkProductDetail","dem","props","data","map","val","key","console","log","Date","ID","Number","match","params","id","Title","className","src","Image","alt","to","window","location","replace","origin","axios","get","then","res","recordset","getdataDetailDragonPark","getdataDragonPark","scrollTo","this","dataDetail","dangerouslySetInnerHTML","__html","Content","width","height","style","border","overflow","scrolling","frameBorder","allowFullScreen","allow","borderRadius","color","onClick","redirect","Component","connect","state","ownProps","dataDragonPark","dataDetailDragonPark","dispatch","type","getDetaildata","getdata"],"mappings":"2OAWMA,E,4MAiBFC,mBAAqB,WACjB,IAAIC,EAAM,EACV,OACI,EAAKC,MAAMC,KAAKC,KAAI,SAACC,EAAKC,GAEtB,OADAC,QAAQC,IAAIH,EAAII,MACZJ,EAAIK,KAAOC,OAAO,EAAKT,MAAMU,MAAMC,OAAOC,KAAOb,GAAO,GACxDM,QAAQC,IAAIH,EAAIU,OAChBd,IACQ,sBAAKe,UAAU,oBAAf,UACJ,qBAAKA,UAAU,oBAAoBC,IAAKZ,EAAIa,MAAOC,IAAI,KACvD,sBAAKH,UAAU,WAAf,UACI,cAAC,IAAD,CAAMI,GAAI,qBAAsBf,EAAIK,GAAIM,UAAU,iBAAlD,SAAoEX,EAAIU,QACxE,+CAAiB,mBAAGC,UAAU,kCAAmCX,EAAII,aAJ7BH,IASzC,O,8CAjCvB,WACIe,OAAOC,SAASC,QAAQF,OAAOC,SAASE,OAAQ,a,+BAEpD,WAAqB,IAAD,OARWC,IAAMC,IAAI,yBACxCC,MAAK,SAACC,GAAD,OAASA,EAAIzB,QAQQwB,MAAK,SAACC,GACzBrB,QAAQC,IAAIoB,EAAIC,WAChB,EAAK3B,MAAM4B,wBAAwBF,EAAIC,cATtBJ,IAAMC,IAAI,kBAClCC,MAAK,SAACC,GAAD,OAASA,EAAIzB,QAUEwB,MAAK,SAACC,GACnB,EAAK1B,MAAM6B,kBAAkBH,EAAIC,gB,gCAIzC,WACIR,OAAOW,SAAS,EAAG,K,oBAwBvB,WAAU,IAAD,OAGL,OAFAzB,QAAQC,WAAWyB,KAAK/B,MAAMU,MAAMC,OAAOC,IAC3CP,QAAQC,IAAIyB,KAAK/B,MAAMC,MAEnB,gCACI,cAAC,IAAD,IACA,0BAASa,UAAU,OAAnB,UACI,qBAAKA,UAAU,YAAf,SAEQiB,KAAK/B,MAAMgC,WAAW9B,KAAI,SAACC,EAAKC,GAC5B,OAAID,EAAIK,KAAOC,OAAO,EAAKT,MAAMU,MAAMC,OAAOC,IAEtC,gCACI,qBAAKE,UAAU,4BAAf,SACI,qBAAIA,UAAU,OAAd,UAAsBX,EAAIU,MAA1B,+BAEJ,sBAAKC,UAAU,yBAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BX,EAAIU,QAClC,mBAAGoB,wBAAyB,CAAEC,OAAO/B,EAAIgC,WACzC,wBAAQpB,IAAI,oLAAoLqB,MAAO,IAAKC,OAAQ,GAAIC,MAAO,CAAEC,OAAQ,OAAQC,SAAU,UAAYC,UAAU,KAAKC,YAAa,EAAGC,gBAAgB,OAAOC,MAAM,iFAEvU,qBAAK9B,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAYwB,MAAO,CAAEO,aAAc,MAAQ9B,IAAKZ,EAAIa,MAAOC,IAAI,aAOvF,QAKvB,sBAAKH,UAAU,gBAAf,UACI,0CAAY,uCAAZ,eACA,mBAAGwB,MAAO,CAAEQ,MAAO,SAAWC,QAAShB,KAAKiB,SAA5C,2BAEJ,qBAAKlC,UAAU,+BAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qDACA,qBAAKA,UAAU,MAAf,SACKiB,KAAKjC,+BAKtB,cAAC,IAAD,W,GAvFemD,aAkHhBC,uBANS,SAACC,EAAOC,GAC5B,MAAO,CACHnD,KAAMkD,EAAME,eACZrB,WAAYmB,EAAMG,yBAnBC,SAACC,EAAUH,GAClC,MAAO,CACHxB,wBAAyB,SAAC3B,GACtBsD,EAAS,CACLC,KAAM,8BACNC,cAAexD,KAGvB4B,kBAAmB,SAAC5B,GAChBsD,EAAS,CACLC,KAAM,uBACNE,QAASzD,QAWViD,CAA6CrD","file":"static/js/16.268b9562.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Footer from './Footer'\r\nimport Nav from './Nav'\r\nimport './../css/itemDetail.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nconst getProductDetailData = () => axios.get('/ds_detail_DragonPark')\r\n    .then((res) => res.data);\r\nconst getProductData = () => axios.get('/ds_DragonPark')\r\n    .then((res) => res.data);\r\nclass DragonParkDetail extends Component {\r\n    redirect() {\r\n        window.location.replace(window.location.origin+ \"/mua-ve\");\r\n    }\r\n    componentDidMount() {\r\n        getProductDetailData().then((res) => {\r\n            console.log(res.recordset);\r\n            this.props.getdataDetailDragonPark(res.recordset)\r\n        })\r\n        getProductData().then((res) => {\r\n            this.props.getdataDragonPark(res.recordset)\r\n        })\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        window.scrollTo(0, 0)\r\n    }    \r\n    checkProductDetail = () => {\r\n        var dem = 1;\r\n        return (\r\n            this.props.data.map((val, key) => {\r\n                console.log(val.Date);\r\n                if (val.ID !== Number(this.props.match.params.id) && dem <= 8) {\r\n                    console.log(val.Title);\r\n                    dem++;\r\n                    return (<div className=\"col-sm-3 box-news\" key={key}>\r\n                        <img className=\"img-fluid box-img\" src={val.Image} alt=\"\" />\r\n                        <div className=\"box-info\">\r\n                            <Link to={'/DragonParkDetail/'+ val.ID} className=\"box-info-title\">{val.Title}</Link>\r\n                            <p>Dragon Park | <i className=\"far fa-calendar-alt mr-2 ml-2\" />{val.Date}</p>\r\n                        </div>\r\n                    </div>)\r\n                }\r\n                else {\r\n                    return '';\r\n                }\r\n            })\r\n        )\r\n    }\r\n    render() {\r\n        console.log(typeof this.props.match.params.id);\r\n        console.log(this.props.data);\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                <section className=\"main\">\r\n                    <div className=\"container\">\r\n                        {\r\n                            this.props.dataDetail.map((val, key) => {\r\n                                if (val.ID === Number(this.props.match.params.id)) {\r\n                                    return (\r\n                                        <div>\r\n                                            <div className=\"main-top text-center mt-3\">\r\n                                                <h4 className=\"mb-5\">{val.Title} - SANJALIKA WATER PARK</h4>\r\n                                            </div>\r\n                                            <div className=\"row align-items-center\">\r\n                                                <div className=\"col-sm-4 detail-content\">\r\n                                                    <h2 className=\"detail-title\">{val.Title}</h2>\r\n                                                    <p dangerouslySetInnerHTML={{ __html:val.Content}}></p>\r\n                                                    <iframe src=\"https://www.facebook.com/plugins/like.php?href=https%3A%2F%2Fdevelopers.facebook.com%2Fplugins%2F&width=150&layout=button_count&action=like&size=small&share=true&height=46&appId\" width={150} height={46} style={{ border: 'none', overflow: 'hidden' }} scrolling=\"no\" frameBorder={0} allowFullScreen=\"true\" allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\" />\r\n                                                </div>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <img className=\"img-fluid\" style={{ borderRadius: '2%' }} src={val.Image} alt=\"\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return '';\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"detail-banner\">\r\n                        <h2>RESERVE <span>for</span> PARTIES!</h2>\r\n                        <a style={{ color: 'white' }} onClick={this.redirect} >BUY TICKET</a>\r\n                    </div>\r\n                    <div className=\"detail-experience-other mt-5\">\r\n                        <div className=\"container\">\r\n                            <h1>Experiences other :</h1>\r\n                            <div className=\"row\">\r\n                                {this.checkProductDetail()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        getdataDetailDragonPark: (data) => {\r\n            dispatch({\r\n                type: 'GET_DATA_DETAIL_DRAGON_PARK',\r\n                getDetaildata: data\r\n            })\r\n        },\r\n        getdataDragonPark: (data) => {\r\n            dispatch({\r\n                type: 'GET_DATA_DRAGON_PARK',\r\n                getdata: data\r\n            })\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        data: state.dataDragonPark,\r\n        dataDetail: state.dataDetailDragonPark\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DragonParkDetail)\r\n"],"sourceRoot":""}